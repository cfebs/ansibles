---
- name: Src dir
  file:
    path: "{{ user_home }}/src"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: Bin dir
  become: yes
  file:
    path: "{{ user_home }}/bin"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: vim tmp
  file:
    path: "{{ user_home }}/.vim-tmp"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: config nvim
  file:
    path: "{{ user_home }}/.config/nvim"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: link vimrc
  become: yes
  file:
    state: link
    force: yes
    src: "{{ user_home }}/.vimrc"
    dest: "{{ user_home }}/.config/nvim/init.vim"

# Replicate Plug setup for nvim
# https://github.com/junegunn/vim-plug
#
# curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
#   https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
- name: nvim autoload dir
  file:
    path: "{{ user_home }}/.local/share/nvim/site/autoload"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: nvim plug dl
  get_url:
    url: 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    dest: "{{ user_home }}/.local/share/nvim/site/autoload/plug.vim"
    mode: "0755"


# bash utils for git completion
- name: git prompt
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    dest: "{{ user_home }}/.git-prompt.sh"
    mode: "0755"

- name: git completion
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
    dest: "{{ user_home }}/.git-completion.sh"
    mode: "0755"

##############################
### hosts/ssh config
##############################
- set_fact:
    custom_etc_hosts_content: "{{ lookup('template', '{{ role_path }}/templates/custom-etc-hosts-block.j2') }}"

- name: etc hosts
  become: yes
  blockinfile:
    path: "/etc/hosts"
    content: '{{ custom_etc_hosts_content }}'
    marker: '# {mark} custom hosts: ansible managed block'

- name: ssh config custom
  blockinfile:
    path: "{{ user_home }}/.ssh/config"
    create: yes
    owner: "{{ user }}"
    group: "{{ user }}"
    marker: '# {mark} ssh config custom: ansible managed block'
    insertbefore: 'BOF'
    block: |
      Host tennisp1
          User collin
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null

      Host droplet2
          HostName 162.243.19.32
          User collin

      Host pixeltermux
          User u0_a523
          Port 8022
