---
- name: Pkgs
  become: yes
  pacman:
    name:
      - i3-wm
      - sx
      - xorg-xev
      - xorg-xinit
      - xorg-xinput
      - xprintidle
      - xss-lock
      - xclip
      - i3lock
      - i3status
      - i3blocks
      - bluez
      - bluez-utils
      - pulseaudio
      - pulseaudio-alsa
      - pulseaudio-bluetooth
      - pulseaudio-equalizer
      - pavucontrol
      - pasystray
      - alacritty
      - arandr
      - dhclient
      - wireless_tools
      - networkmanager
      - network-manager-applet
      - networkmanager-openvpn
      - networkmanager-vpnc
      - ttf-dejavu
      - noto-fonts
      - noto-fonts-cjk
      - noto-fonts-emoji
      - nitrogen
      - libmicrodns
      - vlc
      - thunar
      - chromium
      - dunst
      - tlp
      - z
      - blueman
      - lxappearance
      - arc-gtk-theme
      - papirus-icon-theme
      - docker
      - keychain
      - android-udev
      - archlinux-wallpaper
    state: present

- name: conf dirs
  file:
    state: directory
    dest: "{{ user_home }}/.config/{{ item }}"
    owner: "{{ user }}"
    group: "{{ user }}"
  with_items:
    - dunst
    - fontconfig
    - i3
    - i3status
    - redshift
    - pulse
    - sx

- name: i3 conf
  file:
    state: link
    src: "{{ role_path }}/files/i3config"
    dest: "{{ user_home }}/.config/i3/config"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: i3 status conf
  file:
    state: link
    src: "{{ role_path }}/files/i3status"
    dest: "{{ user_home }}/.config/i3status/config"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: font config
  file:
    state: link
    src: "{{ role_path }}/files/fonts.conf"
    dest: "{{ user_home }}/.config/fontconfig/fonts.conf"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: dunst config
  file:
    state: link
    src: "{{ role_path }}/files/dunstrc"
    dest: "{{ user_home }}/.config/dunst/dunstrc"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: xinitrc
  file:
    state: link
    src: "{{ role_path }}/files/xinitrc"
    dest: "{{ user_home }}/.xinitrc"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0755'

- name: sxrc
  file:
    state: link
    src: "{{ role_path }}/files/sxrc"
    dest: "{{ user_home }}/.config/sx/sxrc"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: emptty dir dirs
  becmoe: yes
  file:
    state: directory
    dest: "/etc/emptty"

- name: emptty conf
  become: yes
  file:
    state: link
    force: yes
    src: "{{ role_path }}/files/empttyconf"
    dest: "/etc/emptty/conf"

- name: pulseaudio conf
  file:
    state: link
    src: "{{ role_path }}/files/pulse_default.pa"
    dest: "{{ user_home }}/.config/pulse/default.pa"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: redshift conf
  file:
    state: link
    src: "{{ role_path }}/files/redshift.conf"
    dest: "{{ user_home }}/.config/redshift/redshift.conf"
    owner: "{{ user }}"
    group: "{{ user }}"


# default applications
- name: mimeapps list
  file:
    state: link
    force: yes
    src: "{{ role_path }}/files/mimeapps.list"
    dest: "{{ user_home }}/.config/mimeapps.list"
    owner: "{{ user }}"
    group: "{{ user }}"


##############################
### Services
##############################
- name: systemd-timesyncd
  become: yes
  systemd:
    name: systemd-timesyncd.service
    enabled: yes
    state: started

- name: bluetooth
  become: yes
  systemd:
    name: bluetooth
    enabled: yes
    state: started

- name: docker
  become: yes
  systemd:
    name: docker
    enabled: yes
    state: started

- name: systemd-timesyncd
  become: yes
  systemd:
    name: docker
    enabled: yes
    state: started


##############################
### hosts/ssh config
##############################
- set_fact:
    custom_etc_hosts_content: "{{ lookup('template', '{{ role_path }}/templates/custom-etc-hosts-block.j2') }}"

- name: etc hosts
  become: yes
  blockinfile:
    path: "/etc/hosts"
    content: '{{ custom_etc_hosts_content }}'
    marker: '# {mark} custom hosts: ansible managed block'

- name: ssh config custom
  blockinfile:
    path: "{{ user_home }}/.ssh/config"
    create: yes
    owner: "{{ user }}"
    group: "{{ user }}"
    marker: '# {mark} ssh config custom: ansible managed block'
    insertbefore: 'BOF'
    block: |
      Host tennisp1
          User collin
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null

      Host droplet
          HostName 162.243.53.195
          User deploy

      Host droplet2
          HostName 162.243.19.32
          User collin

##############################
### Bashrc
##############################

- name: git prompt
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    dest: "{{ user_home }}/.git-prompt.sh"
    mode: "0755"

- name: git completion
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
    dest: "{{ user_home }}/.git-completion.sh"
    mode: "0755"

- name: tmux term
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} tmux term: ansible managed block'
    block: |
      [ -n "$TMUX" ] && export TERM=screen-256color

- name: PS1
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} PS1: ansible managed block'
    block: |
      [[ -f ~/.git-prompt.sh ]] && source ~/.git-prompt.sh
      export GIT_PS1_SHOWDIRTYSTATE=1
      export GIT_PS1_SHOWUNTRACKEDFILES=1
      PS1='[\u@\h \W]$(__git_ps1 " (%s)")\n\$ '

- name: bash aliases
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} bash aliases: ansible managed block'
    block: |
      [[ -f ~/.bash_aliases ]] && source ~/.bash_aliases

- name: nvim alias
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} nvim alias: ansible managed block'
    block: |
      alias vim=nvim
      export EDITOR=nvim

- name: i3 terminal
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} i3 terminal var: ansible managed block'
    block: |
      export TERMINAL=alacritty

- name: rupa z
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} rupa z: ansible managed block'
    block: |
      [[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh

- name: keychain
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    marker: '# {mark} keychain: ansible managed block'
    block: |
      eval $(keychain --eval --quiet $(find ~/.ssh -type f -iname 'id_*' -not -iname '*.pub'))
