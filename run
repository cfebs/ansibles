#!/usr/bin/env bash

DEBUG=0
FACTS=0

_usage() {
    echo "$0 [playbook_file.yml]"
}

_root_or_exit() {
    id=$(id -u)
    if [[ $id != 0 ]]; then
        echo "User id: $id. Must run as root, exiting"
        exit 1
    fi
}

_run() {
    _root_or_exit
    host="$1"

    if [[ $FACTS == 1 ]]; then
        echo "Dumping facts for $host" 1>&2
        ansible -i hosts.ini -m setup "$host"
        exit $?
    fi

    echo "Running playbook for $host" 1>&2
    if [[ $DEBUG == 1 ]]; then
        ansible-playbook -v -i hosts.ini "$host.yml" --tags debug --limit "$host"
        exit $?
    fi

    ansible-playbook -v -i hosts.ini "$host.yml" --limit "$host"
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -d|--debug)
    DEBUG=1
    shift # past argument
    ;;
    -f|--facts)
    FACTS=1
    shift # past argument
    ;;
    # example of arg with value
    # -l|--lib)
    # LIBPATH="$2"
    # shift # past argument
    # shift # past value
    # ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

passed_hostname="$1"

if [[ -n "$passed_hostname" ]]; then
    _run "$passed_hostname"
    rc=$?
    exit $rc
fi

this_hostname=""

if which hostname 1>/dev/null 2>&1; then
    this_hostname="$(hostname)"
elif [[ -e /etc/hostname ]]; then
    this_hostname="$(head /etc/hostname | tr -d '[:space:]')"
fi

if [[ -z "$this_hostname" ]]; then
    echo "No hostname found" 1>&2
    exit 1
fi

_run "$this_hostname"
